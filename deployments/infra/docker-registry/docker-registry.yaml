#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: docker-registry
#  namespace: infra
#data:
#  registry-config.yml: |
#    version: 0.1
#    log:
#      fields:
#        service: registry
#    storage:
#      cache:
#        blobdescriptor: inmemory
#      filesystem:
#        rootdirectory: /var/lib/registry
#    http:
#      addr: :5000
#      debug:
#        prometheus:
#          enabled: true
#      headers:
#        X-Content-Type-Options: [nosniff]
#    auth:
#      htpasswd:
#        realm: basic-realm
#        path: /auth/htpasswd
#    health:
#      storagedriver:
#        enabled: true
#        interval: 10s
#        threshold:
#---
#apiVersion: v1
#kind: Secret
#metadata:
#  name: docker-registry
#  namespace: infra
#type: Opaque
#data:
#  HTPASSWD: YWRtaW46JDJ5JDA1JHJwWHlibVNIMWhEV2VFYjJJUHg5aS5ENmh0MVZjMVBob3YyUnlXSEQzOFdEM1EvYlQ3em8uCgo=
#---
#kind: Deployment
#apiVersion: apps/v1
#metadata:
#  name: docker-registry
#  namespace: infra
#  labels:
#    app: docker-registry
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: docker-registry
#  template:
#    metadata:
#      labels:
#        app: docker-registry
#    spec:
#      volumes:
#        - name: config
#          configMap:
#            name: docker-registry
#            items:
#              - key: registry-config.yml
#                path: config.yml
#        - name: htpasswd
#          secret:
#            secretName: docker-registry
#            items:
#              - key: HTPASSWD
#                path: htpasswd
#        - name: storage
#          persistentVolumeClaim:
#            claimName: docker-registry-claim
#      containers:
#        - name: docker-registry
#          image: registry:2.6.2
#          imagePullPolicy: IfNotPresent
#          ports:
#            - name: http
#              containerPort: 5000
#              protocol: TCP
#          volumeMounts:
#            - name: config
#              mountPath: /etc/docker/registry
#              readOnly: true
#            - name: htpasswd
#              mountPath: /auth
#              readOnly: true
#            - name: storage
#              mountPath: /var/lib/registry
#
#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: docker-registry-claim
#  namespace: infra
#spec:
#  storageClassName: nfs-hdd
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 5Gi
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: docker-registry
#  namespace: infra
#spec:
#  ports:
#    - protocol: TCP
#      port: 5000
#      targetPort: 5000
#  selector:
#    app: docker-registry
#---
#apiVersion: networking.k8s.io/v1beta1
#kind: Ingress
#metadata:
#  name: docker-registry
#  namespace: infra
#  annotations:
#    kubernetes.io/ingress.class: traefik
#    kubernetes.io/tls-acme: "true"
#    cert-manager.io/cluster-issuer: letsencrypt-prod
#spec:
#  rules:
#    - host: registry.cluster.rebelinblue.com
#      http:
#        paths:
#          - path: /
#            backend:
#              serviceName: docker-registry
#              servicePort: 5000
#  tls:
#    - hosts:
#        - registry.cluster.rebelinblue.com
#      secretName: docker-registry-tls