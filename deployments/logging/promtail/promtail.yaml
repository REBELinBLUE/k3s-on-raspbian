apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: promtail
  namespace: logging
  labels:
    k8s-app: promtail
spec:
  privileged: false
  allowPrivilegeEscalation: false
  volumes:
    - 'secret'
    - 'configMap'
    - 'hostPath'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true
  requiredDropCapabilities:
    - ALL
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail
  namespace: logging
  labels:
    k8s-app: promtail
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: promtail-clusterrole
  labels:
    k8s-app: promtail
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "watch", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: promtail-clusterrolebinding
  namespace: logging
  labels:
    k8s-app: promtail
subjects:
  - kind: ServiceAccount
    name: promtail
    namespace: logging
roleRef:
  kind: ClusterRole
  name: promtail-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: promtail
  namespace: logging
  labels:
    k8s-app: promtail
rules:
  - apiGroups:      ['extensions']
    resources:      ['podsecuritypolicies']
    verbs:          ['use']
    resourceNames:  [promtail]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: promtail
  namespace: logging
  labels:
    k8s-app: promtail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: promtail
subjects:
  - kind: ServiceAccount
    name: promtail
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail
  namespace: logging
  labels:
    k8s-app: promtail
data:
  promtail.yaml: |
    server:
      http_listen_port: 3101
      grpc_listen_port: 0

    target_config:
      sync_period: 10s

    positions:
      filename: /run/promtail/positions.yaml

    client:
      batchwait: 1s
      batchsize: 102400
      timeout: 10s
      backoff_config:
        minbackoff: 100ms
        maxbackoff: 5s
        maxretries: 5
      external_labels: {}

    scrape_configs:
      - pipeline_stages:
        - cri:
        job_name: kubernetes-pods-name
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels:
          - __meta_kubernetes_pod_label_name
          target_label: __service__
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ^$
          source_labels:
          - __service__
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __service__
          target_label: job
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: instance
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container_name
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_uid
          - __meta_kubernetes_pod_container_name
          target_label: __path__
      - pipeline_stages:
        - cri:
        job_name: kubernetes-pods-app
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: drop
          regex: .+
          source_labels:
          - __meta_kubernetes_pod_label_name
        - source_labels:
          - __meta_kubernetes_pod_label_app
          target_label: __service__
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ^$
          source_labels:
          - __service__
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __service__
          target_label: job
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: instance
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container_name
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_uid
          - __meta_kubernetes_pod_container_name
          target_label: __path__
      - pipeline_stages:
        - cri:
        job_name: kubernetes-pods-direct-controllers
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: drop
          regex: .+
          separator: ''
          source_labels:
          - __meta_kubernetes_pod_label_name
          - __meta_kubernetes_pod_label_app
        - action: drop
          regex: ^([0-9a-z-.]+)(-[0-9a-f]{8,10})$
          source_labels:
          - __meta_kubernetes_pod_controller_name
        - source_labels:
          - __meta_kubernetes_pod_controller_name
          target_label: __service__
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ^$
          source_labels:
          - __service__
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __service__
          target_label: job
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: instance
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container_name
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_uid
          - __meta_kubernetes_pod_container_name
          target_label: __path__
      - pipeline_stages:
        - cri:
        job_name: kubernetes-pods-indirect-controller
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: drop
          regex: .+
          separator: ''
          source_labels:
          - __meta_kubernetes_pod_label_name
          - __meta_kubernetes_pod_label_app
        - action: keep
          regex: ^([0-9a-z-.]+)(-[0-9a-f]{8,10})$
          source_labels:
          - __meta_kubernetes_pod_controller_name
        - action: replace
          regex: ^([0-9a-z-.]+)(-[0-9a-f]{8,10})$
          source_labels:
          - __meta_kubernetes_pod_controller_name
          target_label: __service__
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ^$
          source_labels:
          - __service__
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __service__
          target_label: job
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: instance
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container_name
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_uid
          - __meta_kubernetes_pod_container_name
          target_label: __path__
      - pipeline_stages:
        - cri:
        job_name: kubernetes-pods-static
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: drop
          regex: ^$
          source_labels:
          - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_label_component
          target_label: __service__
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ^$
          source_labels:
          - __service__
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __service__
          target_label: job
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: instance
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container_name
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
          - __meta_kubernetes_pod_container_name
          target_label: __path__
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  namespace: logging
  labels:
    k8s-app: promtail
spec:
  selector:
    matchLabels:
      k8s-app: promtail
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: promtail
    spec:
      serviceAccountName: promtail
      containers:
        - name: promtail
          image: grafana/promtail:v0.4.0-arm
          imagePullPolicy: Always
          args:
            - -config.file=/etc/promtail/promtail.yaml
            - -client.url=http://loki:3100/api/prom/push
            - -log.level=info
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - name: run
              mountPath: /run/promtail
            - name: containers
              mountPath: /var/log/containers
              readOnly: true
            - name: pods
              mountPath: /var/log/pods
              readOnly: true
          env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          ports:
            - containerPort: 3101
              name: http-metrics
          securityContext:
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsUser: 0
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      volumes:
        - name: config
          configMap:
            name: promtail
        - name: run
          hostPath:
            path: /run/promtail
        - name: containers
          hostPath:
            path: /var/log/containers
        - name: pods
          hostPath:
            path: /var/log/pods
---
apiVersion: v1
kind: Service
metadata:
  name: promtail
  namespace: logging
  labels:
    k8s-app: promtail
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3101"
spec:
  type: ClusterIP
  ports:
    - port: 3101
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
  selector:
    k8s-app: promtail
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: promtail
  namespace: logging
  labels:
    k8s-app: promtail
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/auth-type: basic
    ingress.kubernetes.io/auth-secret: dashboards-auth
spec:
  rules:
    - host: promtail.cluster.rebelinblue.com
      http:
        paths:
          - path: /
            backend:
              serviceName: promtail
              servicePort: 3101
  tls:
    - hosts:
        - promtail.cluster.rebelinblue.com
      secretName: promtail-tls