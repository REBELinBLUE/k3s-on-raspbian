apiVersion: v1
kind: ServiceAccount
metadata:
  name: monitoring
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: monitoring
subjects:
  - kind: ServiceAccount
    name: monitoring
    namespace: monitoring
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-claim
  namespace: monitoring
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      nodeSelector:
        beta.kubernetes.io/arch: arm
        node-role.kubernetes.io/master: "true"
      serviceAccountName: monitoring
      initContainers:
        - name: init-chown-data
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          # 65534 is the nobody user that prometheus uses.
          command: ["chown", "-R", "65534:65534", "/prometheus/"]
          volumeMounts:
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      containers:
        - name: prometheus
          image: prom/prometheus:v2.16.0
          imagePullPolicy: Always
          args:
            - --config.file=/etc/prometheus/prometheus.yaml
            - --storage.tsdb.retention.time=360h
            - --storage.tsdb.path=/prometheus/
            - --storage.tsdb.no-lockfile
            - --web.enable-lifecycle
            - --web.enable-admin-api
            - --web.external-url=http://prometheus.cluster.rebelinblue.com
          ports:
            - name: prometheus
              containerPort: 9090
          resources:
            requests:
              memory: 128Mi
              cpu: 0.1
            limits:
              memory: 1024Mi
              cpu: 1.0
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      volumes:
        - name: prometheus-config-volume
          configMap:
            name: prometheus-config
        - name: prometheus-storage-volume
          persistentVolumeClaim:
            claimName: prometheus-claim
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    name: prometheus
  annotations:
    prometheus.io/scrape: "true"
spec:
  selector:
    app: prometheus-server
  ports:
    - name: prometheus
      port: 8080
      targetPort: prometheus
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: prometheus
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: traefik
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/auth-type: forward
    ingress.kubernetes.io/auth-url: http://traefik-forward-auth.infra.svc
    ingress.kubernetes.io/auth-response-headers: X-Forwarded-User
spec:
  rules:
    - host: prometheus.cluster.rebelinblue.com
      http:
        paths:
          - path: /
            backend:
              serviceName: prometheus
              servicePort: 8080
  tls:
    - hosts:
        - prometheus.cluster.rebelinblue.com
      secretName: prometheus-tls
