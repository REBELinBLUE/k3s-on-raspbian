apiVersion: v1
kind: ConfigMap
metadata:
  name: docker-registry
  namespace: registry
  labels:
    app: docker-registry
data:
  registry-config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
    http:
      addr: :5000
      debug:
        addr: :5001
        prometheus:
          enabled: true
          path: /metrics
      headers:
        X-Content-Type-Options: [nosniff]
    auth:
      htpasswd:
        realm: basic-realm
        path: /auth/htpasswd
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold:
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: docker-registry
  namespace: registry
  labels:
    app: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      volumes:
        - name: config
          configMap:
            name: docker-registry
            items:
              - key: registry-config.yml
                path: config.yml
        - name: htpasswd
          secret:
            secretName: docker-registry-auth
            items:
              - key: htpasswd
                path: htpasswd
        - name: storage
          persistentVolumeClaim:
            claimName: docker-registry-claim
      containers:
        - name: docker-registry
          image: registry:2.6.2
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
            - name: metrics
              containerPort: 5001
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/docker/registry
              readOnly: true
            - name: htpasswd
              mountPath: /auth
              readOnly: true
            - name: storage
              mountPath: /var/lib/registry

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-registry-claim
  namespace: registry
  labels:
    app: docker-registry
spec:
  storageClassName: nfs-hdd
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry
  namespace: registry
  labels:
    app: docker-registry
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "5001"
spec:
  ports:
    - name: http
      protocol: TCP
      port: 5000
      targetPort: 5000
    - name: metrics
      protocol: TCP
      port: 5001
      targetPort: 5001
  selector:
    app: docker-registry
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: docker-registry
  namespace: registry
  labels:
    app: docker-registry
  annotations:
    kubernetes.io/ingress.class: traefik
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: registry.cluster.rebelinblue.com
      http:
        paths:
          - path: /
            backend:
              serviceName: docker-registry
              servicePort: 5000
  tls:
    - hosts:
        - registry.cluster.rebelinblue.com
      secretName: docker-registry-tls