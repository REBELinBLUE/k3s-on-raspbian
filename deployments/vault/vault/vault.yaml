---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  namespace: vault
  labels:
    app: vault
data:
  vault.hcl: |-
    storage "file" {
        path = "/vault/data"
    }
    listener "tcp" {
        address = "0.0.0.0:8200"
        tls_disable = 1
    }
    telemetry {
      prometheus_retention_time = "30s",
      disable_hostname = true
    }
    api_addr = "http://0.0.0.0:8200"
    cluster_address = "http://0.0.0.0:8201"
    disable_mlock = true
    ui = true
    max_lease_ttl = "10h"
    default_lease_ttl = "10h"
    cluster_name = "pi-vault"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault
  namespace: vault
  labels:
    app: vault
---
apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: vault
  labels:
    app: vault
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  selector:
    app: vault
  publishNotReadyAddresses: true
  ports:
    - name: api
      protocol: TCP
      port: 8200
      targetPort: 8200
    - name: cluster
      protocol: TCP
      port: 8201
      targetPort: 8201
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vault
  namespace: vault
  labels:
    app: vault
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault
  namespace: vault
  labels:
    app: vault
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      name: vault
      labels:
        app: vault
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: vault
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 10
      containers:
        - name: vault
          image: rebelinblue/vault:1.2.3
          imagePullPolicy: Always
          ports:
            - name: api
              containerPort: 8200
              protocol: "TCP"
            - name: cluster
              containerPort: 8201
              protocol: "TCP"
            - name: replication
              containerPort: 8202
              protocol: "TCP"
          env:
            - name: ENVIRONMENT
              value: production
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VAULT_ADDR
              value: "http://$(POD_IP):8200"
            - name: VAULT_CLUSTER_ADDR
              value: "http://$(POD_IP):8201"
            - name: VAULT_LOG_LEVEL
              value: "debug"
            - name: VAULT_API_ADDR
              value: "http://$(POD_IP):8200"
            - name: SKIP_CHOWN
              value: "true"
            - name: VAULT_UNSEAL_KEY_1
              valueFrom:
                secretKeyRef:
                  name: vault-unseal-keys
                  key: VAULT_UNSEAL_KEY_1
            - name: VAULT_UNSEAL_KEY_2
              valueFrom:
                secretKeyRef:
                  name: vault-unseal-keys
                  key: VAULT_UNSEAL_KEY_2
            - name: VAULT_UNSEAL_KEY_3
              valueFrom:
                secretKeyRef:
                  name: vault-unseal-keys
                  key: VAULT_UNSEAL_KEY_3
            - name: VAULT_UNSEAL_KEY_4
              valueFrom:
                secretKeyRef:
                  name: vault-unseal-keys
                  key: VAULT_UNSEAL_KEY_4
            - name: VAULT_UNSEAL_KEY_5
              valueFrom:
                secretKeyRef:
                  name: vault-unseal-keys
                  key: VAULT_UNSEAL_KEY_5
          livenessProbe:
            httpGet:
              path: /v1/sys/health?standbyok=true&uninitcode=204&sealedcode=204&
              port: 8200
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /v1/sys/health?standbyok=true&uninitcode=204&sealedcode=204&
              port: 8200
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            readOnlyRootFilesystem: true
            capabilities:
              add:
                - IPC_LOCK
          volumeMounts:
            - name: storage
              mountPath: /vault/data/
            - name: vault-config-file
              mountPath: /vault/config/vault.hcl
              subPath: vault.hcl
            - name: vault-root
              mountPath: /root/
            - name: vault-temp
              mountPath: /tmp/
      serviceAccountName: vault
      volumes:
        - name: vault-config-file
          configMap:
            name: vault-config
        - name: vault-root
          emptyDir: {}
        - name: vault-temp
          emptyDir: {}
        - name: storage
          persistentVolumeClaim:
            claimName: vault
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: vault-ui
  namespace: vault
  labels:
    app: vault
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: vault.cluster.rebelinblue.com
      http:
        paths:
          - backend:
              serviceName: vault
              servicePort: 8200
            path: /
  tls:
    - hosts:
        - vault.cluster.rebelinblue.com
      secretName: vault-tls