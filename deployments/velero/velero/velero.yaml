---
apiVersion: velero.io/v1
kind: BackupStorageLocation
metadata:
  name: default
  namespace: velero
  labels:
    app.kubernetes.io/name: velero
spec:
  provider: aws
  objectStorage:
    bucket: velero
  config:
    region: minio
    s3ForcePathStyle: "true"
    s3Url: http://minio.infra.svc:9000
    publicUrl: https://minio.cluster.rebelinblue.com
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: velero
  namespace: velero
  labels:
    app.kubernetes.io/name: velero
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: velero
  template:
    metadata:
      labels:
        app.kubernetes.io/name: velero
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8085"
        prometheus.io/scrape: "true"
    spec:
      restartPolicy: Always
      serviceAccountName: velero-server
      containers:
        - name: velero
          image: rebelinblue/velero:1.2.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: monitoring
              containerPort: 8085
          command:
            - /velero
          args:
            - server
            - --restic-timeout=4h
          resources:
            limits:
              memory: 1000Mi
            requests:
              cpu: 25m
              memory: 300Mi
          volumeMounts:
            - name: plugins
              mountPath: /plugins
            - name: cloud-credentials
              mountPath: /credentials
            - name: scratch
              mountPath: /scratch
          env:
            - name: VELERO_SCRATCH_DIR
              value: /scratch
            - name: VELERO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: AWS_SHARED_CREDENTIALS_FILE
              value: /credentials/cloud
      volumes:
        - name: cloud-credentials
          secret:
            secretName: velero
        - name: plugins
          emptyDir: {}
        - name: scratch
          emptyDir: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: velero-server
  labels:
    app.kubernetes.io/name: velero
subjects:
  - kind: ServiceAccount
    namespace: apps
    name: velero-server
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: restic
  namespace: velero
  labels:
    app.kubernetes.io/name: velero
spec:
  selector:
    matchLabels:
      name: restic
  template:
    metadata:
      labels:
        name: restic
        app.kubernetes.io/name: velero
    spec:
      serviceAccountName: velero-server
      securityContext:
        runAsUser: 0
      volumes:
        - name: cloud-credentials
          secret:
            secretName: velero
        - name: host-pods
          hostPath:
            path: /var/lib/kubelet/pods
        - name: scratch
          emptyDir: {}
      containers:
        - name: velero
          image: rebelinblue/velero:1.2.0
          imagePullPolicy: IfNotPresent
          command:
            - /velero
          args:
            - restic
            - server
          volumeMounts:
            - name: cloud-credentials
              mountPath: /credentials
            - name: host-pods
              mountPath: /host_pods
              mountPropagation: HostToContainer
            - name: scratch
              mountPath: /scratch
          env:
            - name: VELERO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: VELERO_SCRATCH_DIR
              value: /scratch
            - name: AWS_SHARED_CREDENTIALS_FILE
              value: /credentials/cloud
          securityContext:
            privileged: false
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 15m
              memory: 200Mi
---
apiVersion: velero.io/v1
kind: Schedule
metadata:
  name: velero-daily-backup
  namespace: velero
  labels:
    app.kubernetes.io/name: velero
spec:
  schedule: "0 6 * * *"
  template:
    ttl: 120h
---
apiVersion: v1
kind: Secret
metadata:
  name: velero
  namespace: velero
  labels:
    app.kubernetes.io/name: velero
type: Opaque
data:
  cloud: "W2RlZmF1bHRdCmF3c19hY2Nlc3Nfa2V5X2lkID0gJE1JTklPX0FDQ0VTU19LRVkKYXdzX3NlY3JldF9hY2Nlc3Nfa2V5ID0gJE1JTklPX1NFQ1JFVF9LRVkK"
---
apiVersion: v1
kind: Service
metadata:
  name: velero
  namespace: velero
  labels:
    app.kubernetes.io/name: velero
spec:
  type: ClusterIP
  ports:
    - name: monitoring
      port: 8085
      targetPort: monitoring
  selector:
    app.kubernetes.io/name: velero
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: velero-server
  namespace: velero
  labels:
    app.kubernetes.io/name: velero
---
