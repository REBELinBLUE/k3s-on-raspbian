apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuard
spec:
  selector:
    matchLabels:
      app: kuard
  replicas: 3
  minReadySeconds: 15
  strategy:
    type: RollingUpdate # Recreate
    rollingUpdate:
      maxSurge: 1 # Maximum above replicas
      maxUnavailable: 1 # Maximum below replicas
  template:
    metadata:
      labels:
        app: kuard
    spec:
      tolerations: # See https://github.com/kubernetes/kubernetes/issues/74651
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 5
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 5
      restartPolicy: Always # Only allowed values in deployments
      containers:
        - name: kuard
          image: gcr.io/kuar-demo/kuard-arm:1 # :latest
          imagePullPolicy: Always # IfNotPresent
          command:
            - "/kuard"
            - "$(EXTRA_PARAM)"
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            - name: ANOTHER_PARAM
              valueFrom:
                configMapKeyRef:
                  name: kuard-config
                  key: another-param
            - name: EXTRA_PARAM
              valueFrom:
                configMapKeyRef:
                  name: kuard-config
                  key: extra-param
          livenessProbe:
            httpGet:
              path: /healthy
              port: 8080
            initialDelaySeconds: 5 # Wait before first probe
            timeoutSeconds: 1 # Maximum time to wait for probe
            periodSeconds: 10 # How often to perform probe
            failureThreshold: 3 # Number of consecutive failures before killing the pod
          resources:
            requests:
              cpu: "500m"
              memory: "128Mi"
            limits:
              cpu: "1000m"
              memory: "256Mi"
          volumeMounts:
            - mountPath: /data
              name: kuard-data
            - name: config-volume
              mountPath: /config
            - name: tls-certs
              mountPath: /tls
              readOnly: true
      volumes:
        - name: kuard-data
          persistentVolumeClaim:
            claimName: kuard-claim
        - name: config-volume
          configMap:
            name: kuard-config
        - name: tls-certs
          secret:
            secretName: kuard-tls
