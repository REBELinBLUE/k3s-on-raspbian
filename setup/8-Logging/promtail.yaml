apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: promtail
  namespace: infra
  labels:
    k8s-app: promtail
spec:
  privileged: false
  allowPrivilegeEscalation: false
  volumes:
    - 'secret'
    - 'configMap'
    - 'hostPath'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true
  requiredDropCapabilities:
    - ALL
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail
  namespace: infra
  labels:
    k8s-app: promtail
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: promtail-clusterrole
  labels:
    k8s-app: promtail
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "watch", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: promtail-clusterrolebinding
  namespace: infra
  labels:
    k8s-app: promtail
subjects:
  - kind: ServiceAccount
    name: promtail
    namespace: infra
roleRef:
  kind: ClusterRole
  name: promtail-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: promtail
  namespace: infra
  labels:
    k8s-app: promtail
rules:
  - apiGroups:      ['extensions']
    resources:      ['podsecuritypolicies']
    verbs:          ['use']
    resourceNames:  [promtail]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: promtail
  namespace: infra
  labels:
    k8s-app: promtail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: promtail
subjects:
  - kind: ServiceAccount
    name: promtail
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  namespace: infra
  labels:
    k8s-app: promtail
spec:
  selector:
    matchLabels:
      k8s-app: promtail
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: promtail
        blinktShow: "true"
        blinktColor: "00ff00"
    spec:
      serviceAccountName: promtail
      containers:
        - name: promtail
          image: rebelinblue/promtail:latest
          imagePullPolicy: Always
          args:
            - -config.file=/etc/promtail/promtail.yaml
            - -client.url=http://loki:3100/api/prom/push
            - -log.level=info
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - name: run
              mountPath: /run/promtail
            - name: docker
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: pods
              mountPath: /var/log/pods
              readOnly: true
          env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          ports:
            - containerPort: 3101
              name: http-metrics
          securityContext:
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsUser: 0
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      volumes:
        - name: config
          configMap:
            name: promtail
        - name: run
          hostPath:
            path: /run/promtail
        - name: docker
          hostPath:
            path: /var/lib/docker/containers
        - name: pods
          hostPath:
            path: /var/log/pods
---
apiVersion: v1
kind: Service
metadata:
  name: promtail
  namespace: infra
  labels:
    k8s-app: promtail
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3100"
spec:
  type: ClusterIP
  ports:
    - port: 3100
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
  selector:
    k8s-app: promtail
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: promtail
  namespace: infra
  labels:
    k8s-app: promtail
  annotations:
    kubernetes.io/ingress.class: traefik
    ingress.kubernetes.io/auth-type: basic
    ingress.kubernetes.io/auth-secret: dashboards-auth
    forecastle.stakater.com/expose: "true"
    forecastle.stakater.com/group: "Tools"
    forecastle.stakater.com/icon: "https://raw.githubusercontent.com/grafana/loki/master/docs/logo.png"
spec:
  rules:
    - host: promtail.cluster.local
      http:
        paths:
          - path: /
            backend:
              serviceName: promtail
              servicePort: 3100
