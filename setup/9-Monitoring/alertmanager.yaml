kind: ConfigMap
apiVersion: v1
metadata:
  name: alertmanager
  namespace: infra
data:
  config.yml: |-
    global:
      resolve_timeout: 5m
      slack_api_url: 'https://hooks.slack.com/services/TOKEN'

    templates:
      - '/etc/alertmanager-templates/*.tmpl'

    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 1m
      repeat_interval: 5m
      receiver: default
      routes:
        - match:
            severity: critical
          receiver: critical
          continue: true
        - match:
            severity: warning
          receiver: warning
          continue: true

    receivers:
      - name: 'default'

      - name: 'critical'
        slack_configs:
          - channel: '#k8s-alerts'
            send_resolved: true
            username: '{{ template "slack.default.username" . }}'
            color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'
            title: '{{ template "slack.default.title" . }}'
            title_link: '{{ template "slack.default.titlelink" . }}'
            pretext: '{{ .CommonAnnotations.summary }}'
            text: |-
              {{ range .Alerts }}
              *Alert:* {{ .Annotations.summary }}
              *Description:* {{ .Annotations.description }}
              *Details:*
              {{ range .Labels.SortedPairs }} • *{{ .Name }}:* `{{ .Value }}`
              {{ end }}
              *Source:* {{ .GeneratorURL }}
              {{ end }}
            fallback: '{{ template "slack.default.fallback" . }}'
            icon_emoji: '{{ template "slack.default.iconemoji" . }}'
            icon_url: '{{ template "slack.default.iconurl" . }}'

      - name: 'warning'
        slack_configs:
          - channel: '#k8s-alerts'
            send_resolved: true
            username: '{{ template "slack.default.username" . }}'
            color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'
            title: '{{ template "slack.default.title" . }}'
            title_link: '{{ template "slack.default.titlelink" . }}'
            pretext: '{{ .CommonAnnotations.summary }}'
            text: |-
              {{ range .Alerts }}
              *Alert:* {{ .Annotations.summary }}
              *Description:* {{ .Annotations.description }}
              *Details:*
              {{ range .Labels.SortedPairs }} • *{{ .Name }}:* `{{ .Value }}`
              {{ end }}
              *Source:* {{ .GeneratorURL }}
              {{ end }}
            fallback: '{{ template "slack.default.fallback" . }}'
            icon_emoji: '{{ template "slack.default.iconemoji" . }}'
            icon_url: '{{ template "slack.default.iconurl" . }}'
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alertmanager-claim
  namespace: infra
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: alertmanager
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: alertmanager
  template:
    metadata:
      name: alertmanager
      labels:
        k8s-app: alertmanager
    spec:
      containers:
        - name: alertmanager
          image: prom/alertmanager:master
          imagePullPolicy: Always
          args:
            - --config.file=/etc/alertmanager/config.yml
            - --storage.path=/alertmanager
            - --web.external-url=http://alertmanager.cluster.local
          ports:
            - name: alertmanager
              containerPort: 9093
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          volumeMounts:
            - name: config-volume
              mountPath: /etc/alertmanager
            - name: alertmanager
              mountPath: /alertmanager
        - name: alertmanager-reload
          image: carlosedp/configmap-reload:v0.2.2-arm
          args:
            - --volume-dir=/etc/alertmanager
            - --webhook-url=http://127.0.0.1:9093/-/reload
          volumeMounts:
            - name: config-volume
              mountPath: /etc/alertmanager
      volumes:
        - name: config-volume
          configMap:
            name: alertmanager
        - name: alertmanager
          persistentVolumeClaim:
            claimName: alertmanager-claim
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: infra
  labels:
    name: alertmanager
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
spec:
  selector:
    k8s-app: alertmanager
  ports:
    - name: alertmanager
      protocol: TCP
      port: 9093
      targetPort: 9093
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: alertmanager
  namespace: infra
  labels:
    name: alertmanager
  annotations:
    kubernetes.io/ingress.class: traefik
    ingress.kubernetes.io/auth-type: basic
    ingress.kubernetes.io/auth-secret: dashboards-auth
    forecastle.stakater.com/expose: "true"
    forecastle.stakater.com/appName: "Alert Manager"
    forecastle.stakater.com/group: "Tools"
    forecastle.stakater.com/icon: "https://raw.githubusercontent.com/stakater/ForecastleIcons/master/prometheus.png"
spec:
  rules:
    - host: alertmanager.cluster.local
      http:
        paths:
          - path: /
            backend:
              serviceName: alertmanager
              servicePort: 9093
---
