kind: ConfigMap
apiVersion: v1
metadata:
  name: alertmanager
  namespace: infra
data:
  config.yml: |-
    global:
      resolve_timeout: 5m
      slack_api_url: "http://example.com"
      #victorops_api_url: "<your_victorops_hook>"

    templates:
    - '/etc/alertmanager-templates/*.tmpl'
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 1m
      repeat_interval: 5m  
      receiver: default 
      routes:
      - match:
          team: devops
        receiver: devops
        continue: true 
      - match: 
          team: dev
        receiver: dev
        continue: true

    receivers:
    - name: 'default'

    - name: 'devops'
      #victorops_configs:
      #- api_key: '<YOUR_API_KEY>'
      #  routing_key: 'devops'
      #  message_type: 'CRITICAL'
      #  entity_display_name: '{{ .CommonLabels.alertname }}'
      #  state_message: 'Alert: {{ .CommonLabels.alertname }}. Summary:{{ .CommonAnnotations.summary }}. RawData: {{ .CommonLabels }}'
      slack_configs:
      - channel: '#k8-alerts'
        send_resolved: true

    - name: 'dev'
      #victorops_configs:
      #- api_key: '<YOUR_API_KEY>'
      #  routing_key: 'dev'
      #  message_type: 'CRITICAL'
      #  entity_display_name: '{{ .CommonLabels.alertname }}'
      #  state_message: 'Alert: {{ .CommonLabels.alertname }}. Summary:{{ .CommonAnnotations.summary }}. RawData: {{ .CommonLabels }}'
      slack_configs:
      - channel: '#k8-alerts'
        send_resolved: true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alertmanager-claim
  namespace: infra
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: alertmanager
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: alertmanager
  template:
    metadata:
      name: alertmanager
      labels:
        k8s-app: alertmanager
    spec:
      containers:
        - name: alertmanager
          image: prom/alertmanager:master
          args:
            - '--config.file=/etc/alertmanager/config.yml'
            - '--storage.path=/alertmanager'
          ports:
            - name: alertmanager
              containerPort: 9093
          volumeMounts:
            - name: config-volume
              mountPath: /etc/alertmanager
            - name: alertmanager
              mountPath: /alertmanager
      volumes:
        - name: config-volume
          configMap:
            name: alertmanager
        - name: alertmanager
          persistentVolumeClaim:
            claimName: alertmanager-claim
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: infra
  labels:
    name: alertmanager
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
spec:
  selector:
    k8s-app: alertmanager
  ports:
    - name: alertmanager
      protocol: TCP
      port: 9093
      targetPort: 9093
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: alertmanager
  namespace: infra
  labels:
    name: alertmanager
  annotations:
    ingress.kubernetes.io/auth-type: basic
    ingress.kubernetes.io/auth-secret: dashboards-auth
spec:
  rules:
    - host: alertmanager.cluster.local
      http:
        paths:
          - path: /
            backend:
              serviceName: alertmanager
              servicePort: 9093
---
