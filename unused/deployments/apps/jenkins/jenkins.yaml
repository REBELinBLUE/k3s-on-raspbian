---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: apps
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: jenkins
  namespace: apps
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get","list","patch","update","watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create","delete","get","list","patch","update","watch"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create","delete","get","list","patch","update","watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get","list","watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins
  namespace: apps
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: apps
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jenkins
  namespace: apps
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: jenkins
  name: jenkins
  namespace: apps
spec:
  replicas: 1
  selector:
    matchLabels:
      run: jenkins
  template:
    metadata:
      labels:
        run: jenkins
    spec:
      containers:
        - image: rebelinblue/jenkins:2.206
          imagePullPolicy: Always
          name: jenkins
          ports:
            - containerPort: 8080
              protocol: TCP
              name: web
            - containerPort: 50000
              protocol: TCP
              name: slaves
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/json
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 20
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkinshome
      serviceAccountName: jenkins
      volumes:
        - name: jenkinshome
          persistentVolumeClaim:
            claimName: jenkins
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: jenkins
  name: jenkins
  namespace: apps
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /prometheus/
    prometheus.io/port: "8080"
spec:
  ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: slaves
      port: 50000
      protocol: TCP
      targetPort: 50000
  selector:
    run: jenkins
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jenkins
  namespace: apps
  annotations:
    kubernetes.io/ingress.class: traefik
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: jenkins.cluster.rebelinblue.com
      http:
        paths:
          - path: /
            backend:
              serviceName: jenkins
              servicePort: 8080
  tls:
    - hosts:
        - jenkins.cluster.rebelinblue.com
      secretName: jenkins-tls
